// Code generated by mockery v2.13.0-beta.1. DO NOT EDIT.

package mocks

import (
	pipeline "github.com/egnd/go-pipeline"
	mock "github.com/stretchr/testify/mock"
)

// Tasker is an autogenerated mock type for the Tasker type
type Tasker struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *Tasker) Execute(_a0 pipeline.Task) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(pipeline.Task) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewTaskerT interface {
	mock.TestingT
	Cleanup(func())
}

// NewTasker creates a new instance of Tasker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTasker(t NewTaskerT) *Tasker {
	mock := &Tasker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
