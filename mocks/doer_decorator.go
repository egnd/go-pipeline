// Code generated by mockery v2.13.0-beta.1. DO NOT EDIT.

package mocks

import (
	pipeline "github.com/egnd/go-pipeline"
	mock "github.com/stretchr/testify/mock"
)

// DoerDecorator is an autogenerated mock type for the DoerDecorator type
type DoerDecorator struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *DoerDecorator) Execute(_a0 pipeline.Tasker) pipeline.Tasker {
	ret := _m.Called(_a0)

	var r0 pipeline.Tasker
	if rf, ok := ret.Get(0).(func(pipeline.Tasker) pipeline.Tasker); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pipeline.Tasker)
		}
	}

	return r0
}

type NewDoerDecoratorT interface {
	mock.TestingT
	Cleanup(func())
}

// NewDoerDecorator creates a new instance of DoerDecorator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDoerDecorator(t NewDoerDecoratorT) *DoerDecorator {
	mock := &DoerDecorator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
